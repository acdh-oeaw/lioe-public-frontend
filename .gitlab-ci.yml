
stages:
  - build
  - test
  - deploy  # dummy stage to follow the template guidelines
  - review
  - dast
  - staging
  - canary
  - production
  - incremental rollout 10%
  - incremental rollout 25%
  - incremental rollout 50%
  - incremental rollout 100%
  - performance
  - cleanup
include:
  - template: Jobs/Build.gitlab-ci.yml  # https://gitlab.com/gitlab-org/gitlab/blob/master/lib/gitlab/ci/templates/Jobs/Build.gitlab-ci.yml
  - template: Jobs/Test.gitlab-ci.yml  # https://gitlab.com/gitlab-org/gitlab/blob/master/lib/gitlab/ci/templates/Jobs/Test.gitlab-ci.yml
  - template: Jobs/Code-Quality.gitlab-ci.yml  # https://gitlab.com/gitlab-org/gitlab/blob/master/lib/gitlab/ci/templates/Jobs/Code-Quality.gitlab-ci.yml
  - template: Jobs/Code-Intelligence.gitlab-ci.yml  # https://gitlab.com/gitlab-org/gitlab/blob/master/lib/gitlab/ci/templates/Jobs/Code-Intelligence.gitlab-ci.yml
  - template: Jobs/Deploy.gitlab-ci.yml  # https://gitlab.com/gitlab-org/gitlab/blob/master/lib/gitlab/ci/templates/Jobs/Deploy.gitlab-ci.yml
  - template: Jobs/DAST-Default-Branch-Deploy.gitlab-ci.yml  # https://gitlab.com/gitlab-org/gitlab/blob/master/lib/gitlab/ci/templates/Jobs/DAST-Default-Branch-Deploy.gitlab-ci.yml
  - template: Jobs/Browser-Performance-Testing.gitlab-ci.yml  # https://gitlab.com/gitlab-org/gitlab/blob/master/lib/gitlab/ci/templates/Jobs/Browser-Performance-Testing.gitlab-ci.yml
  - template: Security/DAST.gitlab-ci.yml  # https://gitlab.com/gitlab-org/gitlab/blob/master/lib/gitlab/ci/templates/Security/DAST.gitlab-ci.yml
  - template: Security/Container-Scanning.gitlab-ci.yml  # https://gitlab.com/gitlab-org/gitlab/blob/master/lib/gitlab/ci/templates/Security/Container-Scanning.gitlab-ci.yml
  - template: Security/Dependency-Scanning.gitlab-ci.yml  # https://gitlab.com/gitlab-org/gitlab/blob/master/lib/gitlab/ci/templates/Security/Dependency-Scanning.gitlab-ci.yml
  - template: Security/License-Scanning.gitlab-ci.yml  # https://gitlab.com/gitlab-org/gitlab/blob/master/lib/gitlab/ci/templates/Security/License-Scanning.gitlab-ci.yml
  - template: Security/SAST.gitlab-ci.yml  # https://gitlab.com/gitlab-org/gitlab/blob/master/lib/gitlab/ci/templates/Security/SAST.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml  # https://gitlab.com/gitlab-org/gitlab/blob/master/lib/gitlab/ci/templates/Security/Secret-Detection.gitlab-ci.yml

test:
  stage: test
  image: ghcr.io/acdh-oeaw/herokuish-for-cypress/main:latest
  needs: []
  services: []
  script:
    - cp -R . /tmp/app
    - export CYPRESS_VIDEOS_FOLDER=${CI_PROJECT_DIR}/cypress/videos
    - export CYPRESS_SCREENSHOTS_FOLDER=${CI_PROJECT_DIR}/cypress/videos
    - /bin/herokuish buildpack test
    - TEST_STATUS=$?
    - cp -Rv /app/coverage /app/tests/e2e . || true
    - echo "Test exit code $TEST_STATUS"
    - exit $TEST_STATUS
  rules:
    - if: '$TEST_DISABLED'
      when: never
    - if: '$CI_COMMIT_TAG || $CI_COMMIT_BRANCH'
  artifacts:
    when: always
    paths:
      # save both cypress artifacts and coverage results
      - coverage
      - cypress/videos/**/*.mp4
      - cypress/screenshots/**/*.png
      - e2e/videos/**/*.mp4
      - e2e/screenshots/**/*.png
    expire_in: 10 days

mirror-on-github:
  stage: review
  image: bitnami/git
  script: |
    set -eo pipefail
    apt-get update && apt-get install -y podman
    git config --global user.email "acdh-ch-filter-bot@oeaw.ac.at"
    git config --global user.name "ACDH-CH filter bot"
    git fetch --unshallow origin
    git remote set-url origin https://${GITLAB_WRITE_USER}:${GITLAB_WRITE_TOKEN}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}.git
    current_branch=$(git branch -a --contains $(git show-ref -s $CI_COMMIT_REF_NAME) | grep -v HEAD | sed 's~remotes/origin/~~')
    tag=$(git describe --tags --abbrev=0)
    msg=$(git tag -l --format='%(contents)' $tag)
    git checkout $current_branch
    to_revert=$(git rev-parse HEAD)
    git checkout origin/main -B main
    git merge --squash --allow-unrelated-histories $to_revert -s ort -X theirs | ":"
    git submodule update --init --force --checkout
    git submodule -q foreach git add .
    git commit -a -m "$msg"
    git tag "$tag-release" -m "$msg"
    git push origin main
    git push origin "$tag-release"
    git remote add public https://filter:${GITHUB_WRITE_TOKEN}@github.com/acdh-oeaw/lioe-public-frontend.git    
    git pull public main
    git push public main
    git push public "$tag-release"
    git checkout $current_branch
  rules:
  - if: '$CI_DEPLOY_FREEZE'
    when: never
  - if: '($CI_KUBERNETES_ACTIVE == null || $CI_KUBERNETES_ACTIVE == "") && ($KUBECONFIG == null || $KUBECONFIG == "")'
    when: never
  - if: '$STAGING_ENABLED'
    when: never
  - if: '$CANARY_ENABLED'
    when: never
  - if: '$INCREMENTAL_ROLLOUT_ENABLED'
    when: never
  - if: '$INCREMENTAL_ROLLOUT_MODE'
    when: never
    # Runs only when a tag with 'v0.0.0' pattern is created
  - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+$/'

